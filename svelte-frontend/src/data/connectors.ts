import type { Connector } from '../types';

// Real connector data based on Parable's integration documentation
export const connectors: Connector[] = [
  {
    id: 'activtrak',
    slug: 'activtrak',
    name: 'ActivTrak',
    description: 'Monitor and analyze employee productivity with comprehensive workforce analytics',
    icon: 'https://img.logo.dev/activtrak.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/activtrak/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: false,
    variants: [
      {
        id: 'activtrak-api-key',
        name: 'API Key',
        description: 'API key authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/activtrak/api-key.md',
        formFields: [
          {
            __typename: 'SecretField',
            id: 'activtrak-api-key',
            key: 'apiKey',
            label: 'API Key',
            description: 'Your ActivTrak API key',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'activtrak-test',
          method: 'HTTP_GET',
          endpoint: 'https://api.activtrak.com/v1/user',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to ActivTrak',
            failureMessage: '✗ Invalid API key',
          },
        },
      },
    ],
  },
  {
    id: 'ahrefs',
    slug: 'ahrefs',
    name: 'Ahrefs',
    description: 'Enhance your SEO strategies with extensive backlink and keyword data',
    icon: 'https://img.logo.dev/ahrefs.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/ahrefs/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: true,
    connectedDate: '2025-09-12',
    variants: [
      {
        id: 'ahrefs-api-key',
        name: 'API Key',
        description: 'API key authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/ahrefs/api-key.md',
        formFields: [
          {
            __typename: 'SecretField',
            id: 'ahrefs-api-key',
            key: 'apiKey',
            label: 'API Token',
            description: 'Your Ahrefs API token',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'ahrefs-test',
          method: 'HTTP_GET',
          endpoint: 'https://apiv2.ahrefs.com/v3/site-explorer/metrics-extended',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Ahrefs',
            failureMessage: '✗ Invalid API token',
          },
        },
      },
    ],
  },
  {
    id: 'bamboohr',
    slug: 'bamboohr',
    name: 'BambooHR',
    description: 'Streamline your HR processes with all-in-one HR software',
    icon: 'https://img.logo.dev/bamboohr.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/bamboohr/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: true,
    priorityDueDate: '2025-11-10',
    nextNudgeDate: '2025-11-01',
    priorityNotifyUsers: [
      { name: 'Marcus Johnson', email: 'marcus@parable.io', jobTitle: 'DevOps', role: 'accountable' },
      { name: 'Sarah Chen', email: 'sarah@parable.io', jobTitle: 'CTO', role: 'informed' },
    ],
    connected: false,
    variants: [
      {
        id: 'bamboohr-api-key',
        name: 'API Key',
        description: 'API key authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/bamboohr/api-key.md',
        formFields: [
          {
            __typename: 'HostnameField',
            id: 'bamboohr-subdomain',
            key: 'subdomain',
            label: 'BambooHR Subdomain',
            description: 'Your BambooHR subdomain',
            required: true,
            widget: 'HOSTNAME_INPUT',
            mode: 'READ_WRITE',
            placeholder: 'mycompany',
          },
          {
            __typename: 'SecretField',
            id: 'bamboohr-api-key',
            key: 'apiKey',
            label: 'API Key',
            description: 'Your BambooHR API key',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'bamboohr-test',
          method: 'HTTP_GET',
          endpoint: 'https://${subdomain}.bamboohr.com/api/gateway.php',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to BambooHR',
            failureMessage: '✗ Invalid API key',
          },
        },
      },
    ],
  },
  {
    id: 'confluence',
    slug: 'confluence',
    name: 'Confluence',
    description: 'Collaborate and share knowledge effectively using team workspace',
    icon: 'https://img.logo.dev/atlassian.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/confluence/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: false,
    variants: [
      {
        id: 'confluence-api-token',
        name: 'API Token',
        description: 'API token authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/confluence/api-token.md',
        formFields: [
          {
            __typename: 'HostnameField',
            id: 'confluence-site',
            key: 'site',
            label: 'Confluence Site',
            description: 'Your Confluence site URL',
            required: true,
            widget: 'HOSTNAME_INPUT',
            mode: 'READ_WRITE',
            placeholder: 'mycompany',
          },
          {
            __typename: 'EmailField',
            id: 'confluence-email',
            key: 'email',
            label: 'Email',
            description: 'Your Atlassian account email',
            required: true,
            widget: 'EMAIL_INPUT',
            mode: 'READ_WRITE',
            placeholder: 'admin@company.com',
          },
          {
            __typename: 'SecretField',
            id: 'confluence-token',
            key: 'apiToken',
            label: 'API Token',
            description: 'Your Confluence API token',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'confluence-test',
          method: 'HTTP_GET',
          endpoint: 'https://${site}.atlassian.net/wiki/rest/api/space',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Confluence',
            failureMessage: '✗ Invalid credentials',
          },
        },
      },
    ],
  },
  {
    id: 'contentful',
    slug: 'contentful',
    name: 'Contentful',
    description: 'Manage and deliver content across platforms with headless CMS',
    icon: 'https://img.logo.dev/contentful.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/contentful/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: false,
    variants: [
      {
        id: 'contentful-api-key',
        name: 'API Key',
        description: 'Content Delivery API key',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/contentful/api-key.md',
        formFields: [
          {
            __typename: 'StringField',
            id: 'contentful-space-id',
            key: 'spaceId',
            label: 'Space ID',
            description: 'Your Contentful space ID',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'SecretField',
            id: 'contentful-access-token',
            key: 'accessToken',
            label: 'Access Token',
            description: 'Your Contentful access token',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'contentful-test',
          method: 'HTTP_GET',
          endpoint: 'https://cdn.contentful.com/spaces/${spaceId}',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Contentful',
            failureMessage: '✗ Invalid credentials',
          },
        },
      },
    ],
  },
  {
    id: 'github',
    slug: 'github',
    name: 'GitHub',
    description: 'Host and review code, manage projects, and build software',
    icon: 'https://img.logo.dev/github.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/github/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: true,
    priorityDueDate: '2025-11-05',
    nextNudgeDate: '2025-10-31',
    priorityNotifyUsers: [
      { name: 'Marcus Johnson', email: 'marcus@parable.io', jobTitle: 'DevOps', role: 'accountable' },
      { name: 'Sarah Chen', email: 'sarah@parable.io', jobTitle: 'CTO', role: 'informed' },
    ],
    connected: true,
    connectedDate: '2025-10-01',
    variants: [
      {
        id: 'github-pat',
        name: 'Personal Access Token',
        description: 'GitHub Personal Access Token authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/github/pat.md',
        formFields: [
          {
            __typename: 'SecretField',
            id: 'github-token',
            key: 'token',
            label: 'Personal Access Token',
            description: 'Your GitHub personal access token',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
          {
            __typename: 'MultiSelectField',
            id: 'github-scopes',
            key: 'scopes',
            label: 'Token Scopes',
            description: 'Select the GitHub permissions needed',
            required: true,
            widget: 'MULTISELECT',
            mode: 'READ_WRITE',
            minSelections: 1,
            options: [
              { value: 'repo', label: 'Repository Access', description: 'Full control of private repositories' },
              { value: 'workflow', label: 'Workflow', description: 'Update GitHub Action workflows' },
              { value: 'read:org', label: 'Read Organization', description: 'Read organization data' },
              { value: 'user', label: 'User Data', description: 'Read/write user profile data' },
            ],
          },
        ],
        testConfig: {
          id: 'github-test',
          method: 'HTTP_GET',
          endpoint: 'https://api.github.com/user',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to GitHub',
            failureMessage: '✗ Invalid token',
          },
        },
      },
    ],
  },
  {
    id: 'gitlab',
    slug: 'gitlab',
    name: 'GitLab',
    description: 'Collaborate on code and manage DevOps projects',
    icon: 'https://img.logo.dev/gitlab.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/gitlab/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: false,
    variants: [
      {
        id: 'gitlab-pat',
        name: 'Personal Access Token',
        description: 'GitLab Personal Access Token authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/gitlab/pat.md',
        formFields: [
          {
            __typename: 'URLField',
            id: 'gitlab-url',
            key: 'baseUrl',
            label: 'GitLab URL',
            description: 'Your GitLab instance URL',
            required: true,
            widget: 'URL_INPUT',
            mode: 'READ_WRITE',
            defaultValue: 'https://gitlab.com',
          },
          {
            __typename: 'SecretField',
            id: 'gitlab-token',
            key: 'token',
            label: 'Personal Access Token',
            description: 'Your GitLab personal access token',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'gitlab-test',
          method: 'HTTP_GET',
          endpoint: '${baseUrl}/api/v4/user',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to GitLab',
            failureMessage: '✗ Invalid token',
          },
        },
      },
    ],
  },
  {
    id: 'google-admin',
    slug: 'google-admin',
    name: 'Google Admin',
    description: 'Manage your organization\'s Google Workspace services',
    icon: 'https://img.logo.dev/google.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/google-admin/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: true,
    priorityDueDate: '2025-11-20',
    nextNudgeDate: '2025-11-04',
    priorityNotifyUsers: [
      { name: 'Sarah Chen', email: 'sarah@parable.io', jobTitle: 'CTO', role: 'accountable' },
      { name: 'David Park', email: 'david@parable.io', jobTitle: 'Engineering Manager', role: 'informed' },
    ],
    connected: true,
    connectedDate: '2025-10-15',
    variants: [
      {
        id: 'google-admin-oauth',
        name: 'OAuth 2.0',
        description: 'Secure OAuth 2.0 authentication',
        authMethod: 'OAUTH2',
        recommended: true,
        documentationPath: '/docs/integrations/google-admin/oauth.md',
        formFields: [
          {
            __typename: 'StringField',
            id: 'google-admin-client-id',
            key: 'clientId',
            label: 'Client ID',
            description: 'OAuth client ID from Google Cloud Console',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'SecretField',
            id: 'google-admin-client-secret',
            key: 'clientSecret',
            label: 'Client Secret',
            description: 'OAuth client secret',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'google-admin-test',
          method: 'HTTP_GET',
          endpoint: 'https://admin.googleapis.com/admin/directory/v1/users',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Google Admin',
            failureMessage: '✗ Unable to connect',
          },
        },
      },
    ],
  },
  {
    id: 'grammarly',
    slug: 'grammarly',
    name: 'Grammarly',
    description: 'Enhance your writing with AI-powered suggestions',
    icon: 'https://img.logo.dev/grammarly.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/grammarly/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: false,
    variants: [
      {
        id: 'grammarly-oauth',
        name: 'OAuth 2.0',
        description: 'OAuth 2.0 authentication',
        authMethod: 'OAUTH2',
        recommended: true,
        documentationPath: '/docs/integrations/grammarly/oauth.md',
        formFields: [
          {
            __typename: 'StringField',
            id: 'grammarly-client-id',
            key: 'clientId',
            label: 'Client ID',
            description: 'OAuth client ID from Grammarly',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'SecretField',
            id: 'grammarly-client-secret',
            key: 'clientSecret',
            label: 'Client Secret',
            description: 'OAuth client secret',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'grammarly-test',
          method: 'HTTP_GET',
          endpoint: 'https://api.grammarly.com/v1/oauth/authorize',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Grammarly',
            failureMessage: '✗ Unable to connect',
          },
        },
      },
    ],
  },
  {
    id: 'hibob',
    slug: 'hibob',
    name: 'HiBob',
    description: 'Modernize your HR operations with people management platform',
    icon: 'https://img.logo.dev/hibob.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/hibob/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: false,
    variants: [
      {
        id: 'hibob-api-key',
        name: 'API Key',
        description: 'API key authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/hibob/api-key.md',
        formFields: [
          {
            __typename: 'SecretField',
            id: 'hibob-token',
            key: 'token',
            label: 'Service User Token',
            description: 'Your HiBob service user token',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'hibob-test',
          method: 'HTTP_GET',
          endpoint: 'https://api.hibob.com/v1/people',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to HiBob',
            failureMessage: '✗ Invalid token',
          },
        },
      },
    ],
  },
  {
    id: 'jira',
    slug: 'jira',
    name: 'Jira',
    description: 'Plan, track, and manage agile software development',
    icon: 'https://img.logo.dev/atlassian.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/jira/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: true,
    priorityDueDate: '2025-11-12',
    nextNudgeDate: '2025-11-02',
    priorityNotifyUsers: [
      { name: 'Marcus Johnson', email: 'marcus@parable.io', jobTitle: 'DevOps', role: 'accountable' },
      { name: 'Sarah Chen', email: 'sarah@parable.io', jobTitle: 'CTO', role: 'informed' },
    ],
    connected: false,
    variants: [
      {
        id: 'jira-cloud',
        name: 'Cloud',
        description: 'Jira Cloud API token authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/jira/cloud.md',
        formFields: [
          {
            __typename: 'HostnameField',
            id: 'jira-cloud-site',
            key: 'site',
            label: 'Jira Site',
            description: 'Your Jira Cloud site name',
            required: true,
            widget: 'HOSTNAME_INPUT',
            mode: 'READ_WRITE',
            placeholder: 'mycompany',
          },
          {
            __typename: 'EmailField',
            id: 'jira-cloud-email',
            key: 'email',
            label: 'Email',
            description: 'Your Atlassian account email',
            required: true,
            widget: 'EMAIL_INPUT',
            mode: 'READ_WRITE',
            placeholder: 'admin@company.com',
          },
          {
            __typename: 'SecretField',
            id: 'jira-cloud-token',
            key: 'apiToken',
            label: 'API Token',
            description: 'Your Jira API token',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'jira-cloud-test',
          method: 'HTTP_GET',
          endpoint: 'https://${site}.atlassian.net/rest/api/3/myself',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Jira Cloud',
            failureMessage: '✗ Invalid credentials',
          },
        },
      },
      {
        id: 'jira-on-premises',
        name: 'On-Premises',
        description: 'Jira Server/Data Center authentication',
        authMethod: 'API_KEY',
        recommended: false,
        documentationPath: '/docs/integrations/jira/on-premises.md',
        formFields: [
          {
            __typename: 'URLField',
            id: 'jira-onprem-url',
            key: 'baseUrl',
            label: 'Jira URL',
            description: 'Your Jira server URL',
            required: true,
            widget: 'URL_INPUT',
            mode: 'READ_WRITE',
            placeholder: 'https://jira.company.com',
          },
          {
            __typename: 'StringField',
            id: 'jira-onprem-username',
            key: 'username',
            label: 'Username',
            description: 'Your Jira username',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'SecretField',
            id: 'jira-onprem-password',
            key: 'password',
            label: 'Password',
            description: 'Your Jira password',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'jira-onprem-test',
          method: 'HTTP_GET',
          endpoint: '${baseUrl}/rest/api/2/myself',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Jira Server',
            failureMessage: '✗ Invalid credentials',
          },
        },
      },
    ],
  },
  {
    id: 'lattice',
    slug: 'lattice',
    name: 'Lattice',
    description: 'Drive employee engagement and performance with people management tools',
    icon: 'https://img.logo.dev/lattice.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/lattice/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: false,
    variants: [
      {
        id: 'lattice-api-key',
        name: 'API Key',
        description: 'API key authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/lattice/api-key.md',
        formFields: [
          {
            __typename: 'SecretField',
            id: 'lattice-api-key',
            key: 'apiKey',
            label: 'API Key',
            description: 'Your Lattice API key',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'lattice-test',
          method: 'HTTP_GET',
          endpoint: 'https://api.lattice.com/v1/users',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Lattice',
            failureMessage: '✗ Invalid API key',
          },
        },
      },
    ],
  },
  {
    id: 'linear',
    slug: 'linear',
    name: 'Linear',
    description: 'Streamline your software development workflow with issue tracking',
    icon: 'https://img.logo.dev/linear.app?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/linear/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: true,
    connectedDate: '2025-10-20',
    variants: [
      {
        id: 'linear-api-key',
        name: 'API Key',
        description: 'Personal API key authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/linear/api-key.md',
        formFields: [
          {
            __typename: 'SecretField',
            id: 'linear-api-key',
            key: 'apiKey',
            label: 'API Key',
            description: 'Your Linear personal API key',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'linear-test',
          method: 'HTTP_POST',
          endpoint: 'https://api.linear.app/graphql',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Linear',
            failureMessage: '✗ Invalid API key',
          },
        },
      },
    ],
  },
  {
    id: 'microsoft-365',
    slug: 'microsoft-365',
    name: 'Microsoft 365',
    description: 'Access Microsoft\'s suite of productivity tools',
    icon: 'https://img.logo.dev/microsoft.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/microsoft-365/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: true,
    priorityDueDate: '2025-11-18',
    nextNudgeDate: '2025-11-03',
    priorityNotifyUsers: [
      { name: 'Sarah Chen', email: 'sarah@parable.io', jobTitle: 'CTO', role: 'accountable' },
      { name: 'David Park', email: 'david@parable.io', jobTitle: 'Engineering Manager', role: 'informed' },
    ],
    connected: false,
    variants: [
      {
        id: 'microsoft-365-standard',
        name: 'Standard Access',
        description: 'Full OAuth 2.0 authentication',
        authMethod: 'OAUTH2',
        recommended: true,
        documentationPath: '/docs/integrations/microsoft-365/oauth.md',
        formFields: [
          {
            __typename: 'StringField',
            id: 'm365-tenant-id',
            key: 'tenantId',
            label: 'Tenant ID',
            description: 'Your Microsoft 365 tenant ID',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'StringField',
            id: 'm365-client-id',
            key: 'clientId',
            label: 'Client ID',
            description: 'Application (client) ID',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'SecretField',
            id: 'm365-client-secret',
            key: 'clientSecret',
            label: 'Client Secret',
            description: 'Application client secret',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'm365-standard-test',
          method: 'HTTP_GET',
          endpoint: 'https://graph.microsoft.com/v1.0/me',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Microsoft 365',
            failureMessage: '✗ Unable to connect',
          },
        },
      },
      {
        id: 'microsoft-365-restricted',
        name: 'Restricted Access',
        description: 'Limited scope OAuth 2.0 for compliance',
        authMethod: 'OAUTH2',
        recommended: false,
        documentationPath: '/docs/integrations/microsoft-365/restricted.md',
        formFields: [
          {
            __typename: 'StringField',
            id: 'm365-restricted-tenant-id',
            key: 'tenantId',
            label: 'Tenant ID',
            description: 'Your Microsoft 365 tenant ID',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'StringField',
            id: 'm365-restricted-client-id',
            key: 'clientId',
            label: 'Client ID',
            description: 'Application (client) ID',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'SecretField',
            id: 'm365-restricted-client-secret',
            key: 'clientSecret',
            label: 'Client Secret',
            description: 'Application client secret',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
          {
            __typename: 'MultiSelectField',
            id: 'm365-restricted-scopes',
            key: 'scopes',
            label: 'Permitted Scopes',
            description: 'Select limited API permissions',
            required: true,
            widget: 'MULTISELECT',
            mode: 'READ_WRITE',
            minSelections: 1,
            options: [
              { value: 'User.Read', label: 'User Read', description: 'Read user profile' },
              { value: 'Mail.Read', label: 'Mail Read', description: 'Read user mail' },
              { value: 'Calendars.Read', label: 'Calendar Read', description: 'Read user calendars' },
            ],
          },
        ],
        testConfig: {
          id: 'm365-restricted-test',
          method: 'HTTP_GET',
          endpoint: 'https://graph.microsoft.com/v1.0/me',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected with restricted access',
            failureMessage: '✗ Unable to connect',
          },
        },
      },
    ],
  },
  {
    id: 'microsoft-dynamics',
    slug: 'microsoft-dynamics',
    name: 'Microsoft Dynamics',
    description: 'Manage your business operations with Dynamics GP',
    icon: 'https://img.logo.dev/microsoft.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/microsoft-dynamics/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: false,
    variants: [
      {
        id: 'dynamics-gp-api-key',
        name: 'GP',
        description: 'Dynamics GP API key authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/microsoft-dynamics/gp.md',
        formFields: [
          {
            __typename: 'URLField',
            id: 'dynamics-url',
            key: 'baseUrl',
            label: 'Dynamics GP URL',
            description: 'Your Dynamics GP server URL',
            required: true,
            widget: 'URL_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'SecretField',
            id: 'dynamics-api-key',
            key: 'apiKey',
            label: 'API Key',
            description: 'Your Dynamics GP API key',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'dynamics-gp-test',
          method: 'HTTP_GET',
          endpoint: '${baseUrl}/api/v1/companies',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Dynamics GP',
            failureMessage: '✗ Invalid credentials',
          },
        },
      },
    ],
  },
  {
    id: 'monday',
    slug: 'monday',
    name: 'Monday',
    description: 'Plan, track, and manage your team\'s work with work OS',
    icon: 'https://img.logo.dev/monday.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/monday/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: false,
    variants: [
      {
        id: 'monday-api-token',
        name: 'API Token',
        description: 'API token authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/monday/api-token.md',
        formFields: [
          {
            __typename: 'SecretField',
            id: 'monday-api-token',
            key: 'apiToken',
            label: 'API Token',
            description: 'Your Monday.com API token',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'monday-test',
          method: 'HTTP_POST',
          endpoint: 'https://api.monday.com/v2',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Monday',
            failureMessage: '✗ Invalid API token',
          },
        },
      },
    ],
  },
  {
    id: 'notion',
    slug: 'notion',
    name: 'Notion',
    description: 'Organize your work and life with all-in-one workspace',
    icon: 'https://img.logo.dev/notion.so?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/notion/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: true,
    connectedDate: '2025-09-28',
    variants: [
      {
        id: 'notion-api-token',
        name: 'Internal Integration',
        description: 'Internal integration token',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/notion/internal.md',
        formFields: [
          {
            __typename: 'SecretField',
            id: 'notion-token',
            key: 'token',
            label: 'Integration Token',
            description: 'Your Notion internal integration token',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'notion-test',
          method: 'HTTP_GET',
          endpoint: 'https://api.notion.com/v1/users/me',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Notion',
            failureMessage: '✗ Invalid token',
          },
        },
      },
    ],
  },
  {
    id: 'okta',
    slug: 'okta',
    name: 'Okta',
    description: 'Secure your organization\'s identity with identity management',
    icon: 'https://img.logo.dev/okta.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/okta/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: true,
    priorityDueDate: '2025-11-08',
    nextNudgeDate: '2025-10-30',
    priorityNotifyUsers: [
      { name: 'Marcus Johnson', email: 'marcus@parable.io', jobTitle: 'DevOps', role: 'accountable' },
      { name: 'Sarah Chen', email: 'sarah@parable.io', jobTitle: 'CTO', role: 'informed' },
    ],
    connected: false,
    variants: [
      {
        id: 'okta-api-token',
        name: 'API Token',
        description: 'API token authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/okta/api-token.md',
        formFields: [
          {
            __typename: 'HostnameField',
            id: 'okta-domain',
            key: 'domain',
            label: 'Okta Domain',
            description: 'Your Okta domain',
            required: true,
            widget: 'HOSTNAME_INPUT',
            mode: 'READ_WRITE',
            placeholder: 'dev-123456',
          },
          {
            __typename: 'SecretField',
            id: 'okta-api-token',
            key: 'apiToken',
            label: 'API Token',
            description: 'Your Okta API token',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'okta-test',
          method: 'HTTP_GET',
          endpoint: 'https://${domain}.okta.com/api/v1/users/me',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Okta',
            failureMessage: '✗ Invalid credentials',
          },
        },
      },
    ],
  },
  {
    id: 'oracle',
    slug: 'oracle',
    name: 'Oracle',
    description: 'Manage your enterprise data and financial operations',
    icon: 'https://img.logo.dev/oracle.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/oracle/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: false,
    variants: [
      {
        id: 'oracle-database',
        name: 'Database',
        description: 'Oracle Database API access',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/oracle/database.md',
        formFields: [
          {
            __typename: 'URLField',
            id: 'oracle-db-url',
            key: 'baseUrl',
            label: 'Oracle Database URL',
            description: 'Your Oracle database connection URL',
            required: true,
            widget: 'URL_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'StringField',
            id: 'oracle-db-username',
            key: 'username',
            label: 'Username',
            description: 'Database username',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'SecretField',
            id: 'oracle-db-password',
            key: 'password',
            label: 'Password',
            description: 'Database password',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'oracle-db-test',
          method: 'HTTP_GET',
          endpoint: '${baseUrl}/api/v1/status',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Oracle Database',
            failureMessage: '✗ Invalid credentials',
          },
        },
      },
      {
        id: 'oracle-financials',
        name: 'Financials',
        description: 'Oracle Financials Cloud API access',
        authMethod: 'API_KEY',
        recommended: false,
        documentationPath: '/docs/integrations/oracle/financials.md',
        formFields: [
          {
            __typename: 'URLField',
            id: 'oracle-fin-url',
            key: 'baseUrl',
            label: 'Oracle Cloud URL',
            description: 'Your Oracle Financials Cloud URL',
            required: true,
            widget: 'URL_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'StringField',
            id: 'oracle-fin-username',
            key: 'username',
            label: 'Username',
            description: 'Oracle Cloud username',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'SecretField',
            id: 'oracle-fin-password',
            key: 'password',
            label: 'Password',
            description: 'Oracle Cloud password',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'oracle-fin-test',
          method: 'HTTP_GET',
          endpoint: '${baseUrl}/fscmRestApi/resources/11.13.18.05',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Oracle Financials',
            failureMessage: '✗ Invalid credentials',
          },
        },
      },
    ],
  },
  {
    id: 'salesforce',
    slug: 'salesforce',
    name: 'Salesforce',
    description: 'Manage your customer relationships with CRM platform',
    icon: 'https://img.logo.dev/salesforce.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/salesforce/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: true,
    priorityDueDate: '2025-11-15',
    nextNudgeDate: '2025-11-01',
    priorityNotifyUsers: [
      { name: 'Marcus Johnson', email: 'marcus@parable.io', jobTitle: 'DevOps', role: 'accountable' },
      { name: 'Sarah Chen', email: 'sarah@parable.io', jobTitle: 'CTO', role: 'informed' },
    ],
    connected: false,
    variants: [
      {
        id: 'salesforce-oauth',
        name: 'OAuth 2.0',
        description: 'Secure OAuth 2.0 authentication (Recommended)',
        authMethod: 'OAUTH2',
        recommended: true,
        documentationPath: '/docs/integrations/salesforce/oauth.md',
        formFields: [
          {
            __typename: 'HostnameField',
            id: 'sf-oauth-subdomain',
            key: 'subdomain',
            label: 'Salesforce Subdomain',
            description: 'Your Salesforce subdomain (e.g., "mycompany" for mycompany.salesforce.com)',
            required: true,
            widget: 'HOSTNAME_INPUT',
            mode: 'READ_WRITE',
            placeholder: 'mycompany',
          },
          {
            __typename: 'StringField',
            id: 'sf-oauth-client-id',
            key: 'clientId',
            label: 'Client ID',
            description: 'OAuth application client ID from Salesforce',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
            placeholder: '3MVG9...',
          },
          {
            __typename: 'SecretField',
            id: 'sf-oauth-client-secret',
            key: 'clientSecret',
            label: 'Client Secret',
            description: 'OAuth application client secret (will be encrypted)',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
          {
            __typename: 'URLField',
            id: 'sf-oauth-callback',
            key: 'callbackUrl',
            label: 'Callback URL',
            description: 'OAuth callback URL configured in Salesforce',
            required: true,
            widget: 'URL_INPUT',
            mode: 'READ_WRITE',
            defaultValue: 'https://app.parable.io/integrations/callback',
          },
          {
            __typename: 'SelectField',
            id: 'sf-oauth-environment',
            key: 'environment',
            label: 'Environment',
            description: 'Salesforce environment type',
            required: true,
            widget: 'SELECT',
            mode: 'READ_WRITE',
            defaultValue: 'production',
            options: [
              { value: 'production', label: 'Production', description: 'Live production environment' },
              { value: 'sandbox', label: 'Sandbox', description: 'Testing/development environment' },
            ],
            allowCustom: false,
          },
          {
            __typename: 'BooleanField',
            id: 'sf-oauth-sandbox',
            key: 'useSandbox',
            label: 'Use Sandbox Mode',
            description: 'Enable additional sandbox-specific features',
            required: false,
            widget: 'TOGGLE',
            mode: 'READ_WRITE',
            defaultValue: 'false',
          },
          {
            __typename: 'MarkdownField',
            id: 'sf-oauth-setup-instructions',
            key: 'setupInstructions',
            label: 'Setup Instructions',
            required: false,
            widget: 'MARKDOWN_DISPLAY',
            mode: 'READ_ONLY',
            content: `## Prerequisites

Before configuring OAuth, you need to:

1. Create a Connected App in Salesforce
2. Configure OAuth settings in the Connected App
3. Add the callback URL to your allowed redirects
4. Copy the Consumer Key (Client ID) and Consumer Secret (Client Secret)

[View detailed setup guide →](/docs/integrations/salesforce/oauth.md)`,
          },
        ],
        testConfig: {
          id: 'sf-oauth-test',
          method: 'HTTP_GET',
          endpoint: 'https://${subdomain}.salesforce.com/services/oauth2/token',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Successfully connected to Salesforce',
            failureMessage: '✗ Unable to connect to Salesforce. Please check your credentials.',
          },
        },
      },
      {
        id: 'salesforce-api-key',
        name: 'API Key',
        description: 'Simple API key authentication',
        authMethod: 'API_KEY',
        recommended: false,
        documentationPath: '/docs/integrations/salesforce/api-key.md',
        formFields: [
          {
            __typename: 'HostnameField',
            id: 'sf-api-subdomain',
            key: 'subdomain',
            label: 'Salesforce Subdomain',
            description: 'Your Salesforce subdomain',
            required: true,
            widget: 'HOSTNAME_INPUT',
            mode: 'READ_WRITE',
            placeholder: 'mycompany',
          },
          {
            __typename: 'EmailField',
            id: 'sf-api-username',
            key: 'username',
            label: 'Username',
            description: 'Your Salesforce username (email)',
            required: true,
            widget: 'EMAIL_INPUT',
            mode: 'READ_WRITE',
            placeholder: 'admin@company.com',
          },
          {
            __typename: 'SecretField',
            id: 'sf-api-key',
            key: 'apiKey',
            label: 'Security Token',
            description: 'Your Salesforce security token',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
          {
            __typename: 'ArrayField',
            id: 'sf-api-stakeholders',
            key: 'stakeholders',
            label: 'Stakeholder Emails',
            description: 'Email addresses to notify about integration issues',
            required: false,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
            itemType: 'email',
            minItems: 0,
            maxItems: 10,
            placeholder: 'stakeholder@company.com',
          },
          {
            __typename: 'MultiSelectField',
            id: 'sf-api-scopes',
            key: 'scopes',
            label: 'API Scopes',
            description: 'Select the Salesforce API permissions needed',
            required: true,
            widget: 'MULTISELECT',
            mode: 'READ_WRITE',
            minSelections: 1,
            options: [
              { value: 'api', label: 'API Access', description: 'Basic API access' },
              { value: 'refresh_token', label: 'Refresh Token', description: 'Offline access' },
              { value: 'full', label: 'Full Access', description: 'Complete data access' },
              { value: 'chatter_api', label: 'Chatter API', description: 'Chatter social features' },
            ],
          },
        ],
        testConfig: {
          id: 'sf-api-test',
          method: 'HTTP_POST',
          endpoint: 'https://${subdomain}.salesforce.com/services/data/v58.0/',
          timeoutMs: 10000,
          expectedResponse: {
            statusCode: 200,
            bodyPattern: '"success"\\s*:\\s*true',
            successMessage: '✓ API credentials validated successfully',
            failureMessage: '✗ Invalid API credentials. Please verify your security token.',
          },
        },
      },
    ],
  },
  {
    id: 'salespad',
    slug: 'salespad',
    name: 'SalesPad',
    description: 'Enhance your sales operations with distribution software',
    icon: 'https://img.logo.dev/salespad.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/salespad/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: false,
    variants: [
      {
        id: 'salespad-api-key',
        name: 'API Key',
        description: 'API key authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/salespad/api-key.md',
        formFields: [
          {
            __typename: 'URLField',
            id: 'salespad-url',
            key: 'baseUrl',
            label: 'SalesPad URL',
            description: 'Your SalesPad server URL',
            required: true,
            widget: 'URL_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'SecretField',
            id: 'salespad-api-key',
            key: 'apiKey',
            label: 'API Key',
            description: 'Your SalesPad API key',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'salespad-test',
          method: 'HTTP_GET',
          endpoint: '${baseUrl}/api/v1/customers',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to SalesPad',
            failureMessage: '✗ Invalid credentials',
          },
        },
      },
    ],
  },
  {
    id: 'sap-concur',
    slug: 'sap-concur',
    name: 'SAP Concur',
    description: 'Manage your travel and expenses with comprehensive solutions',
    icon: 'https://img.logo.dev/sap.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/sap-concur/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: false,
    variants: [
      {
        id: 'sap-concur-oauth',
        name: 'OAuth 2.0',
        description: 'OAuth 2.0 authentication',
        authMethod: 'OAUTH2',
        recommended: true,
        documentationPath: '/docs/integrations/sap-concur/oauth.md',
        formFields: [
          {
            __typename: 'StringField',
            id: 'concur-client-id',
            key: 'clientId',
            label: 'Client ID',
            description: 'OAuth client ID from SAP Concur',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'SecretField',
            id: 'concur-client-secret',
            key: 'clientSecret',
            label: 'Client Secret',
            description: 'OAuth client secret',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
          {
            __typename: 'SelectField',
            id: 'concur-region',
            key: 'region',
            label: 'Data Center',
            description: 'SAP Concur data center region',
            required: true,
            widget: 'SELECT',
            mode: 'READ_WRITE',
            defaultValue: 'us',
            options: [
              { value: 'us', label: 'United States', description: 'US data center' },
              { value: 'eu', label: 'Europe', description: 'EU data center' },
              { value: 'cn', label: 'China', description: 'China data center' },
            ],
            allowCustom: false,
          },
        ],
        testConfig: {
          id: 'concur-test',
          method: 'HTTP_GET',
          endpoint: 'https://www.concursolutions.com/api/v3.0/expense/reports',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to SAP Concur',
            failureMessage: '✗ Unable to connect',
          },
        },
      },
    ],
  },
  {
    id: 'slack',
    slug: 'slack',
    name: 'Slack',
    description: 'Collaborate and communicate with your team using messaging platform',
    icon: 'https://img.logo.dev/slack.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/slack/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: true,
    connectedDate: '2025-10-10',
    variants: [
      {
        id: 'slack-oauth',
        name: 'OAuth 2.0',
        description: 'Slack OAuth authentication',
        authMethod: 'OAUTH2',
        recommended: true,
        documentationPath: '/docs/integrations/slack/oauth.md',
        formFields: [
          {
            __typename: 'StringField',
            id: 'slack-workspace',
            key: 'workspace',
            label: 'Workspace Name',
            description: 'Your Slack workspace name',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
            placeholder: 'mycompany',
          },
          {
            __typename: 'StringField',
            id: 'slack-client-id',
            key: 'clientId',
            label: 'Client ID',
            description: 'OAuth client ID from Slack',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'SecretField',
            id: 'slack-client-secret',
            key: 'clientSecret',
            label: 'Client Secret',
            description: 'OAuth client secret',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'slack-test',
          method: 'HTTP_GET',
          endpoint: 'https://slack.com/api/auth.test',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Slack',
            failureMessage: '✗ Connection failed',
          },
        },
      },
    ],
  },
  {
    id: 'tableau',
    slug: 'tableau',
    name: 'Tableau',
    description: 'Visualize and analyze your data with business intelligence tools',
    icon: 'https://img.logo.dev/tableau.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/tableau/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: false,
    variants: [
      {
        id: 'tableau-api-token',
        name: 'Personal Access Token',
        description: 'Personal access token authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/tableau/api-token.md',
        formFields: [
          {
            __typename: 'URLField',
            id: 'tableau-server-url',
            key: 'serverUrl',
            label: 'Tableau Server URL',
            description: 'Your Tableau server URL',
            required: true,
            widget: 'URL_INPUT',
            mode: 'READ_WRITE',
            placeholder: 'https://tableau.company.com',
          },
          {
            __typename: 'StringField',
            id: 'tableau-site-name',
            key: 'siteName',
            label: 'Site Name',
            description: 'Your Tableau site name',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'StringField',
            id: 'tableau-token-name',
            key: 'tokenName',
            label: 'Token Name',
            description: 'Personal access token name',
            required: true,
            widget: 'TEXT_INPUT',
            mode: 'READ_WRITE',
          },
          {
            __typename: 'SecretField',
            id: 'tableau-token-secret',
            key: 'tokenSecret',
            label: 'Token Secret',
            description: 'Personal access token secret',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'tableau-test',
          method: 'HTTP_POST',
          endpoint: '${serverUrl}/api/3.15/auth/signin',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to Tableau',
            failureMessage: '✗ Invalid credentials',
          },
        },
      },
    ],
  },
  {
    id: 'talentdesk',
    slug: 'talentdesk',
    name: 'TalentDesk',
    description: 'Manage your freelance workforce with comprehensive platform',
    icon: 'https://img.logo.dev/talentdesk.io?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/talentdesk/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: false,
    variants: [
      {
        id: 'talentdesk-api-key',
        name: 'API Key',
        description: 'API key authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/talentdesk/api-key.md',
        formFields: [
          {
            __typename: 'SecretField',
            id: 'talentdesk-api-key',
            key: 'apiKey',
            label: 'API Key',
            description: 'Your TalentDesk API key',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'talentdesk-test',
          method: 'HTTP_GET',
          endpoint: 'https://api.talentdesk.io/v1/contractors',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to TalentDesk',
            failureMessage: '✗ Invalid API key',
          },
        },
      },
    ],
  },
  {
    id: 'testrail',
    slug: 'testrail',
    name: 'TestRail',
    description: 'Manage your software testing with test case management',
    icon: 'https://img.logo.dev/testrail.com?token=pk_N2gy3fJKQ0aldg9QTg7cHA',
    enabled: true,
    documentationPath: '/docs/integrations/testrail/index.md',
    supportUrl: 'https://docs.askparable.com/getting-api-keys/',
    prioritized: false,
    connected: false,
    variants: [
      {
        id: 'testrail-api-key',
        name: 'API Key',
        description: 'API key authentication',
        authMethod: 'API_KEY',
        recommended: true,
        documentationPath: '/docs/integrations/testrail/api-key.md',
        formFields: [
          {
            __typename: 'URLField',
            id: 'testrail-url',
            key: 'baseUrl',
            label: 'TestRail URL',
            description: 'Your TestRail instance URL',
            required: true,
            widget: 'URL_INPUT',
            mode: 'READ_WRITE',
            placeholder: 'https://mycompany.testrail.io',
          },
          {
            __typename: 'EmailField',
            id: 'testrail-email',
            key: 'email',
            label: 'Email',
            description: 'Your TestRail account email',
            required: true,
            widget: 'EMAIL_INPUT',
            mode: 'READ_WRITE',
            placeholder: 'admin@company.com',
          },
          {
            __typename: 'SecretField',
            id: 'testrail-api-key',
            key: 'apiKey',
            label: 'API Key',
            description: 'Your TestRail API key',
            required: true,
            widget: 'PASSWORD',
            mode: 'WRITE_ONLY',
            revealable: false,
          },
        ],
        testConfig: {
          id: 'testrail-test',
          method: 'HTTP_GET',
          endpoint: '${baseUrl}/index.php?/api/v2/get_projects',
          timeoutMs: 5000,
          expectedResponse: {
            statusCode: 200,
            successMessage: '✓ Connected to TestRail',
            failureMessage: '✗ Invalid credentials',
          },
        },
      },
    ],
  },
];

